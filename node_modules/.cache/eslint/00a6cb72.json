[{"/home/random/dev/erwanlfrt.github.io/src/main.ts":"1","/home/random/dev/erwanlfrt.github.io/src/App.vue":"2","/home/random/dev/erwanlfrt.github.io/src/router/index.ts":"3","/home/random/dev/erwanlfrt.github.io/src/views/HomeView.vue":"4","/home/random/dev/erwanlfrt.github.io/src/components/projects-section/ProjectsSection.vue":"5","/home/random/dev/erwanlfrt.github.io/src/components/contact-section/ContactSection.vue":"6","/home/random/dev/erwanlfrt.github.io/src/components/cv-section/CvSection.vue":"7","/home/random/dev/erwanlfrt.github.io/src/components/menu-bar/MenuBar.vue":"8","/home/random/dev/erwanlfrt.github.io/src/components/custom-title/CustomTitle.vue":"9","/home/random/dev/erwanlfrt.github.io/src/components/project-tile/ProjectTile.vue":"10","/home/random/dev/erwanlfrt.github.io/src/components/language-selector/LanguageSelector.vue":"11","/home/random/dev/erwanlfrt.github.io/src/store/LanguageStore.ts":"12","/home/random/dev/erwanlfrt.github.io/src/components/techno-tag/TechnoTag.vue":"13"},{"size":207,"mtime":1663501445717,"results":"14","hashOfConfig":"15"},{"size":809,"mtime":1663501445697,"results":"16","hashOfConfig":"15"},{"size":346,"mtime":1663501445717,"results":"17","hashOfConfig":"15"},{"size":880,"mtime":1663501445717,"results":"18","hashOfConfig":"15"},{"size":501,"mtime":1663501445717,"results":"19","hashOfConfig":"15"},{"size":1000,"mtime":1663501445717,"results":"20","hashOfConfig":"15"},{"size":1222,"mtime":1663501445717,"results":"21","hashOfConfig":"15"},{"size":1507,"mtime":1663501445717,"results":"22","hashOfConfig":"15"},{"size":463,"mtime":1663501445717,"results":"23","hashOfConfig":"15"},{"size":2564,"mtime":1663501445717,"results":"24","hashOfConfig":"15"},{"size":2201,"mtime":1663501445717,"results":"25","hashOfConfig":"15"},{"size":229,"mtime":1663501445717,"results":"26","hashOfConfig":"15"},{"size":418,"mtime":1663501445717,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f2c7jd",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/random/dev/erwanlfrt.github.io/src/main.ts",[],"/home/random/dev/erwanlfrt.github.io/src/App.vue",["58","59","60"],"<script setup lang=\"ts\">\nimport MenuBar from '@/components/menu-bar/MenuBar.vue'\nimport { storeToRefs } from 'pinia';\nimport { ref } from 'vue';\nimport { useLanguageStore } from './store/LanguageStore';\n</script>\n<template>\n  <menu-bar></menu-bar>\n  <div id=\"core\">\n    <router-view/>\n  </div>\n</template>\n\n<style lang=\"scss\">\n@font-face {\n  font-family: \"Roboto\";\n  src: url(\"@/assets/fonts/Roboto/roboto-v29-latin-regular.woff\") format(\"woff\"),\n  url(\"@/assets/fonts//Roboto/roboto-v29-latin-regular.woff2\") format(\"woff2\")\n}\n\nhtml,body {\n  margin:0;\n  padding:0;\n  height: 100%;\n  font-family: Roboto, Arial, Helvetica, sans-serif;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  \n\n  #core {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n  }\n}\n</style>\n","/home/random/dev/erwanlfrt.github.io/src/router/index.ts",[],"/home/random/dev/erwanlfrt.github.io/src/views/HomeView.vue",[],"/home/random/dev/erwanlfrt.github.io/src/components/projects-section/ProjectsSection.vue",[],"/home/random/dev/erwanlfrt.github.io/src/components/contact-section/ContactSection.vue",["61","62","63"],"<script setup lang=\"ts\">\nimport CustomTitle from '@/components/custom-title/CustomTitle.vue';\nimport { useLanguageStore } from '@/store/LanguageStore';\nimport { storeToRefs } from 'pinia';\nimport json from '@/assets/text/contact.json';\nimport { computed } from 'vue';\n\nconst store = useLanguageStore()\nconst { language } = storeToRefs(store)\n\nconst beforePN = computed (() =>((json as any)[language.value].beforePN))\nconst afterPN = computed (() =>((json as any)[language.value].afterPN))\nconst afterMA = computed (() =>((json as any)[language.value].afterMA))\n</script>\n\n<template>\n  <div class=\"section\">\n    <custom-title title=\"Contact\"></custom-title>\n    <p>\n      {{beforePN}}\n      <a href=\"tel:33783613196\">+33 7 83 61 31 96</a> \n      {{afterPN}}\n      <a href=\"mailto:leforestiererwan@gmail.com\">leforestiererwan@gmail.com</a>\n      {{afterMA}}\n    </p>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .section {\n    margin-bottom: 50px;\n    a {\n      color: #09A17D;\n    }\n  }\n</style>","/home/random/dev/erwanlfrt.github.io/src/components/cv-section/CvSection.vue",["64","65","66"],"<script setup lang=\"ts\">\nimport CustomTitle from '@/components/custom-title/CustomTitle.vue';\nimport { useLanguageStore } from '@/store/LanguageStore';\nimport { storeToRefs } from 'pinia';\nimport { computed, ref } from 'vue';\nimport json from '@/assets/text/cv.json';\n\nconst store = useLanguageStore()\nconst { language } = storeToRefs(store)\n\nconst text = computed (() =>((json as any)[language.value].text))\nconst button = computed (() =>((json as any)[language.value].button))\n</script>\n<template>\n  <div class=\"section\">\n    <custom-title title=\"Curriculum Vitae\"></custom-title>\n    <div class=\"content\">\n      <p>\n        {{text}}\n      </p>\n      <div class=\"button-wrapper\">\n        <a :href=\"'/cv/CV_' + language + '_Erwan_LE-FORESTIER.pdf'\" target=\"_blank\" rel=\"noopener noreferrer\">{{button}}</a>\n      </div>\n    </div>\n  \n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .section {\n    margin-bottom: 30px;\n\n    .content {\n\n      .button-wrapper {\n        display: flex;\n        justify-content: center;\n        a {\n          color: white;\n          background: #09A17D;\n          padding: 10px 20px;\n          border-radius: 20px;\n          text-decoration: none;\n        }\n      }\n      \n    }\n  }\n</style>","/home/random/dev/erwanlfrt.github.io/src/components/menu-bar/MenuBar.vue",[],"/home/random/dev/erwanlfrt.github.io/src/components/custom-title/CustomTitle.vue",[],"/home/random/dev/erwanlfrt.github.io/src/components/project-tile/ProjectTile.vue",["67","68","69"],"<script setup lang=\"ts\">\nimport { StringLiteral } from '@babel/types';\nimport TechnoTag from '@/components/techno-tag/TechnoTag.vue';\nimport json from \"@/assets/text/projects\";\nimport { computed } from 'vue';\nimport { useLanguageStore } from '@/store/LanguageStore';\nimport { storeToRefs } from 'pinia';\n\ntype Tag = {\n  name: string;\n  color: string;\n}\n\ntype Project = {\n  name: string;\n  logo: string;\n  background: string | undefined;\n  description: string;\n  color: string;\n  url: string;\n  tags: Tag[];\n}\ntype Props = {\n  project: string\n}\n\nconst props = defineProps<Props>(); // eslint-disable-line\n\nconst project = json[props.project]\n\nconst store = useLanguageStore()\nconst { language } = storeToRefs(store)\nconst description = computed (() =>((json as any)[props.project].description[language.value]))\n\n</script>\n\n<template>\n  <a class=\"project-tile\" :href=\"project.url\">\n    <div class=\"upper\" :style=\"project.background !== ''? ({'background-image': 'url(' + require('../../assets/screenshots/' +project.background) + ')'}) : ''\">\n      <div class=\"logo-wrapper\">\n        <img :src=\"require('../../assets/logo/' + project.logo)\" :alt=\"project.name\" class=\"logo\">\n      </div>\n    </div>\n    <div class=\"lower\" :style=\"{'border-top': '1px solid ' + project.color}\">\n      <h2>{{project.name}}</h2>\n      <span>{{description}}</span>\n      <div class=\"tags\">\n        <techno-tag v-for=\"(tag, index) in project.tags\" :key=\"index\" :name=\"tag.name\" :color=\"tag.color\"></techno-tag>\n      </div>\n    </div>\n  </a>\n</template>\n\n<style lang=\"scss\" scoped>\n  .project-tile {\n    display: flex;\n    flex-direction: column;\n    width: 350px;\n    border-radius: 15px;\n    border: 1px solid grey;\n    overflow: hidden;\n    margin-bottom: 15px;\n    text-decoration: none;\n    color: black;\n    .upper {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 75px;\n      background-size: cover;\n\n      .logo-wrapper {\n        backdrop-filter: blur(2px);\n        width: 100%;\n        flex-grow: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        .logo {\n          width: 40px;\n        }\n      }\n    }\n\n    .lower {\n      display: flex;\n      flex-direction: column;\n      padding: 10px 15px;\n\n      h2 {\n        margin: 0;\n        font-size: 20px;\n\n      }\n\n      span {\n        margin-top: 5px;\n        margin-bottom: 15px;\n        color: #6b6b6b;\n      }\n\n      .tags {\n        display: flex;\n      }\n    }\n  }\n</style>\n\n\n\n","/home/random/dev/erwanlfrt.github.io/src/components/language-selector/LanguageSelector.vue",[],"/home/random/dev/erwanlfrt.github.io/src/store/LanguageStore.ts",[],"/home/random/dev/erwanlfrt.github.io/src/components/techno-tag/TechnoTag.vue",[],{"ruleId":"70","severity":1,"message":"71","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":21},{"ruleId":"70","severity":1,"message":"74","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":13},{"ruleId":"70","severity":1,"message":"75","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":11,"column":43,"nodeType":"78","messageId":"79","endLine":11,"endColumn":46,"suggestions":"80"},{"ruleId":"76","severity":1,"message":"77","line":12,"column":42,"nodeType":"78","messageId":"79","endLine":12,"endColumn":45,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"77","line":13,"column":42,"nodeType":"78","messageId":"79","endLine":13,"endColumn":45,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"74","line":5,"column":20,"nodeType":"72","messageId":"73","endLine":5,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":11,"column":39,"nodeType":"78","messageId":"79","endLine":11,"endColumn":42,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"77","line":12,"column":41,"nodeType":"78","messageId":"79","endLine":12,"endColumn":44,"suggestions":"84"},{"ruleId":"70","severity":1,"message":"85","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":23},{"ruleId":"70","severity":1,"message":"86","line":14,"column":6,"nodeType":"72","messageId":"73","endLine":14,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":33,"column":46,"nodeType":"78","messageId":"79","endLine":33,"endColumn":49,"suggestions":"87"},"@typescript-eslint/no-unused-vars","'storeToRefs' is defined but never used.","Identifier","unusedVar","'ref' is defined but never used.","'useLanguageStore' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["88","89"],["90","91"],["92","93"],["94","95"],["96","97"],"'StringLiteral' is defined but never used.","'Project' is defined but never used.",["98","99"],{"messageId":"100","fix":"101","desc":"102"},{"messageId":"103","fix":"104","desc":"105"},{"messageId":"100","fix":"106","desc":"102"},{"messageId":"103","fix":"107","desc":"105"},{"messageId":"100","fix":"108","desc":"102"},{"messageId":"103","fix":"109","desc":"105"},{"messageId":"100","fix":"110","desc":"102"},{"messageId":"103","fix":"111","desc":"105"},{"messageId":"100","fix":"112","desc":"102"},{"messageId":"103","fix":"113","desc":"105"},{"messageId":"100","fix":"114","desc":"102"},{"messageId":"103","fix":"115","desc":"105"},"suggestUnknown",{"range":"116","text":"117"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"116","text":"118"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"119","text":"117"},{"range":"119","text":"118"},{"range":"120","text":"117"},{"range":"120","text":"118"},{"range":"121","text":"117"},{"range":"121","text":"118"},{"range":"122","text":"117"},{"range":"122","text":"118"},{"range":"123","text":"117"},{"range":"123","text":"118"},[385,388],"unknown","never",[458,461],[530,533],[381,384],[449,452],[760,763]]